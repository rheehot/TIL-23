# 병합정렬

목표: 오름차순 또는 내림차순으로 배열을 정렬하는 것

 1945년  John von Neumann이 개발했다. 병합정렬은 최고, 최악 그리고, 평균**O(n log n)**의 시간 복잡도를 가진 효율적인 알고리즘이다.

병합정렬 알고리즘은 큰문제를 작은문제로 분할하여 해결하는 분할 정복 알고리즘을 사용한다. 즉, 병합정렬 알고리즘은 **분할**한 후 **병합**하는 것이다. 

n개의 숫자의 배열을 순서대로 정렬 한다고 가정하자. 
병합정렬 알고리즘은 아래와 같이 동작한다:

- 정렬되지 않은 더미에 숫자들을 입력한다.
- 더미를 2개로 나눈다.  ( **2개의 정렬되지 않은 숫자 더미**가 있다.)
- 더이상 나눌 수 없을 때까지 더미를 계속 나눈다. 마지막에는 각 더미에 숫자 한개만 남게 된다.
- 순서대로 짝을 지어 더미들을 결합하여 **병합**한다.  병합할 때 마다, 정렬 순서에 따라 숫자들을 넣는다. 이 방법은 각각의 더미들이 이미 정렬 되어 있기 때문에 쉽게 이용할 수 있는 방법이다.

## 예제

### 분할

 *n* 개의 숫자를 가진 배열 `[2, 1, 5, 4, 9]`이 있다고 하자. 이 배열은 정렬되지 않은 배열이다. 더미를 더이상 나눌 수  없을 때까지 더미를  계속 나눈다.

먼저, 배열을 2개의 배열로 나눈다: `[2, 1]`  그리고  `[5, 4, 9]`.

좌측 배열 `[2, 1]`을  `[2] `와`[1]`로 나눈다.

우측 배열  `[5, 4, 9]` 을 `[5]` 그리고  `[4, 9]`로 나눈다. 배열 `[5]`는 더 이상 나눌 수 없는 배열이다. 하지만,  배열`[4, 9]` 는  `[4]`그리고 `[9]`로 한번 더 나눌 수 있다.

분할프로세스가 끝나면 아래와 같은 더미들이 남는다: `[2]` `[1]` `[5]` `[4]` `[9]`. 각 더미는 하나의 원소로 구성된다.